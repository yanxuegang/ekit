package slices

import "errors"

func Delete[T any](values []T, index int) []T {
	if index <0 || index > len(values) - 1{
		return values
	}
	if len(values) == 0 {
		return []T{}
	}
	res := make([]T, 0, len(values) - 1)
	for i := range values {
		if i != index {
			res = append(res, values[i])
		}
	}
	return res
}

func Add[T any] (values []T, val T, index int) ([]T, error) {
	if index < 0 || index > len(values)-1 {
		return nil, errors.New("index out of range")
	}
	res := make([]T, 0, len(values)+1)
	for i := 0; i < index; i++ {
		res = append(res, values[i])
	}

	res = append(res, val)

	for i := index; i < len(values); i++ {
		res = append(res, values[i])
	}

	return res, nil
}