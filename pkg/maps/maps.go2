package maps

func PutIfAbsent[K comparable, V any](m map[K]V, key K, val V) (V, bool) {
	old, ok := m[key]
	if ok {
		return old, false
	}
	m[key] = val
	return val, true
}

func Keys[K comparable, V any](m map[K]V, key K, val V) []K {
	res := make([]K, 0, len(m))
	for k, _ := range m {
		res = append(res, k)
	}
	return res
}

func Values[K comparable, V any](m map[K]V, key K, val V) []V {
	res := make([]V, 0, len(m))
	for _, v := range m {
		res = append(res, v)
	}
	return res
}